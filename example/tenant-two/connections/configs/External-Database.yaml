options:
  mfa:
    active: true
    return_enroll_settings: true
  import_mode: false
  configuration: {}
  customScripts:
    login: >
      function login(email, password, callback) {
        // This script should authenticate a user against the credentials stored in
        // your database.
        // It is executed when a user attempts to log in or immediately after signing
        // up (as a verification that the user was successfully signed up).
        //
        // Everything returned by this script will be set as part of the user profile
        // and will be visible by any of the tenant admins. Avoid adding attributes
        // with values such as passwords, keys, secrets, etc.
        //
        // The `password` parameter of this function is in plain text. It must be
        // hashed/salted to match whatever is stored in your database. For example:
        //
        //     var bcrypt = require('bcrypt@0.8.5');
        //     bcrypt.compare(password, dbPasswordHash, function(err, res)) { ... }
        //
        // There are three ways this script can finish:
        // 1. The user's credentials are valid. The returned user profile should be in
        // the following format: https://auth0.com/docs/users/normalized/auth0/normalized-user-profile-schema
        //     var profile = {
        //       user_id: ..., // user_id is mandatory
        //       email: ...,
        //       [...]
        //     };
        //     callback(null, profile);
        // 2. The user's credentials are invalid
        //     callback(new WrongUsernameOrPasswordError(email, "my error message"));
        // 3. Something went wrong while trying to reach your database
        //     callback(new Error("my error message"));
        //
        // A list of Node.js modules which can be referenced is available here:
        //
        //    https://tehsis.github.io/webtaskio-canirequire/
      	const test = true;
        const msg = 'Please implement the Login script for this database connection ' +
          'at https://manage.auth0.com/#/connections/database';
        return callback(new Error(msg));
      }
    change_password: >
      function changePassword(email, newPassword, callback) {
        // This script should change the password stored for the current user in your
        // database. It is executed when the user clicks on the confirmation link
        // after a reset password request.
        // The content and behavior of password confirmation emails can be customized
        // here: https://manage.auth0.com/#/emails
        // The `newPassword` parameter of this function is in plain text. It must be
        // hashed/salted to match whatever is stored in your database.
        //
        // There are three ways that this script can finish:
        // 1. The user's password was updated successfully:
        //     callback(null, true);
        // 2. The user's password was not updated:
        //     callback(null, false);
        // 3. Something went wrong while trying to reach your database:
        //     callback(new Error("my error message"));
        //
        // If an error is returned, it will be passed to the query string of the page
        // where the user is being redirected to after clicking the confirmation link.
        // For example, returning `callback(new Error("error"))` and redirecting to
        // https://example.com would redirect to the following URL:
        //     https://example.com?email=alice%40example.com&message=error&success=false
      	const test = true;
        const msg = 'Please implement the Change Password script for this database ' +
          'connection at https://manage.auth0.com/#/connections/database';
        return callback(new Error(msg));
      }
  disable_signup: false
  passwordPolicy: good
  password_history:
    size: 5
    enable: false
  strategy_version: 2
  requires_username: false
  password_dictionary:
    enable: false
    dictionary: []
  brute_force_protection: true
  set_user_root_attributes: on_first_login
  password_no_personal_info:
    enable: false
  password_complexity_options:
    min_length: 8
  enabledDatabaseCustomization: true
strategy: auth0
name: External-Database
is_domain_connection: false
enabled_clients: []
